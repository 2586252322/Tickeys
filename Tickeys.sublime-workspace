{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"run",
				"runloop_source"
			],
			[
				"msg",
				"msg_send"
			],
			[
				"NSN",
				"NSUserNotificationCenterDelegate"
			],
			[
				"NSU",
				"NSUserNotificationCenter"
			],
			[
				"prin",
				"println!	println! …"
			],
			[
				"pri",
				"println!	println! …"
			],
			[
				"las",
				"last_key"
			],
			[
				"CFRLR",
				"CFRunLoopRef"
			],
			[
				"load",
				"load_audio"
			],
			[
				"key",
				"keycode"
			],
			[
				"ptr",
				"ptr_to_self"
			],
			[
				"user",
				"user_data"
			],
			[
				"Vec",
				"Vec"
			],
			[
				"event",
				"event_tap"
			],
			[
				"ev",
				"event_tap"
			],
			[
				"use",
				"userdata"
			],
			[
				"us",
				"userdata"
			],
			[
				"runl",
				"runLoopSource"
			],
			[
				"runlo",
				"runloop_source"
			],
			[
				"eve",
				"eventTap"
			],
			[
				"CFR",
				"CFRunLoopSourceRef"
			],
			[
				"data",
				"data_path"
			],
			[
				"un",
				"unwrap"
			],
			[
				"NS",
				"NSUserNotification"
			],
			[
				"set",
				"setInformativeText_"
			],
			[
				"au",
				"autorelease"
			],
			[
				"play",
				"play_keycode_audio"
			],
			[
				"print",
				"println!	println! …"
			],
			[
				"aud",
				"audios"
			],
			[
				"core",
				"core_graphics"
			],
			[
				"C",
				"stepCount"
			],
			[
				"G",
				"GestureStep     Enum (main.rs) : enum GestureStep                                  "
			],
			[
				"ty",
				"type_of_obj"
			],
			[
				"to",
				"to_string"
			],
			[
				"st",
				"struct-tuple	struct …(…)"
			],
			[
				"pr",
				"println!	println! …"
			],
			[
				"ind",
				"indexOfO"
			]
		]
	},
	"buffers":
	[
		{
			"file": "build.rs",
			"settings":
			{
				"buffer_size": 122,
				"line_ending": "Unix",
				"name": "fn main()"
			}
		},
		{
			"file": "Cargo.toml",
			"settings":
			{
				"buffer_size": 294,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/alut.rs",
			"settings":
			{
				"buffer_size": 406,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "\nextern crate libc;\nextern crate openal;\nextern crate cocoa;\nextern crate time;\nextern crate hyper;\nextern crate toml;\n\n\n#[macro_use]\nextern crate objc;\n\nuse std::collections::{VecDeque, VecMap};\nuse std::option::Option;\nuse std::any::Any;\nuse std::boxed::Box;\nuse std::thread;\nuse std::io::Read;\nuse std::sync::{Once, ONCE_INIT};\nuse std::string::String;\nuse std::fs::File;\n\nuse libc::{c_void};\nuse core_foundation::*;\nuse core_graphics::*;\nuse openal::al::*;\nuse openal::al::ffi::*;\nuse alut::*;\nuse cocoa::appkit::{NSEvent};\nuse cocoa::foundation::{NSString};\nuse objc::*;\nuse objc::runtime::*;\nuse cocoa::base::{class,id,nil};\nuse cocoa::foundation::NSAutoreleasePool;\n\n\nuse hyper::Client;\nuse hyper::header::{Connection, ConnectionOption};\nuse hyper::status::StatusCode;\n\n//自己的modules才需要声明\nmod core_graphics;\nmod core_foundation;\nmod alut;\nmod event_tap;\n\n\nconst QUIT_KEY_SEQ: &'static[u8] = &[12, 0, 6, 18, 19, 20]; //QAZ123\nstatic AUDIO_FILES: [&'static str; 9] = [\"1.wav\",\"2.wav\",\"3.wav\",\"4.wav\",\"5.wav\",\"6.wav\",\"7.wav\",\"8.wav\", \"enter.wav\"];\nconst NON_UNIQ_AUDIO_COUNT:u8 = 8;\n\nfn main() \n{	\n	let mut data_path = get_data_path();\n	data_path.push(\"app_config.toml\");\n	let cfg_path = data_path.as_path().to_str().unwrap();\n\n	let mut toml_file = match File::open(cfg_path)\n	{\n		Ok(f) => f, \n		Err(e) => panic!(\"Error open file:{} : {}\", e, cfg_path)\n	};\n	let mut toml_str = String::new();\n	let n_read = toml_file.read_to_string(&mut toml_str);\n	match n_read\n	{\n		Ok(_) => {},\n		Err(e) => panic!(\"Failed Reading file content:{}\", e)\n	};\n \n	let app_cfg: toml::Value = toml_str.parse().unwrap();\n	println!(\"app_config:{:?}\", app_cfg.lookup(\"config.check_update_api\").unwrap());\n\n	thread::spawn(||\n	{\n	    let mut client = Client::new();\n\n		//todo: test only\n	    let mut result = client.get(\"http://www.yingdev.com/projects/latestVersion?product=WGestures\")\n	        .header(Connection(vec![ConnectionOption::Close]))\n	        .send();\n	    \n	    let mut resp;\n	    match result\n	    {\n	    	Ok(mut r) => resp = r,\n	    	Err(e) => {\n	    		println!(\"Failed to check for update: {}\", e);\n	    		return;\n	    	}\n	    }\n\n	    if resp.status == StatusCode::Ok\n	    {\n	    	let mut content = String::new();\n	    	match resp.read_to_string(&mut content)\n	    	{\n	    		Ok(_) => {},\n	    		Err(e) => {\n	    			println!(\"Failed to read http content: {}\", e);\n	    			return;\n	    		}\n	    	}\n	    	println!(\"Response: {}\", content);\n	    }else\n	    {\n	    	println!(\"Failed to check for update: Status {}\", resp.status);\n	    }\n	});\n\n	unsafe\n	{\n		alutInit(std::ptr::null_mut(), std::ptr::null_mut());\n	}\n\n	let _pool = unsafe{NSAutoreleasePool::new(nil)};\n\n	let mut app = App::new();\n	let mut audio_dir = get_data_path();\n	audio_dir.push(\"bubble\");\n	\n	\n	app.load_audio(&(audio_dir.into_os_string().into_string().unwrap()), &AUDIO_FILES);\n\n	app.show_notification(\"Tickeys正在运行\", \"按 QAZ123 退出\");\n\n	app.run();\n}\n\n\nfn get_data_path() -> std::path::PathBuf\n{\n	let args:Vec<_> = std::env::args().collect();\n	let mut data_path = std::path::PathBuf::from(&args[0]);\n	data_path.pop();\n	data_path.push(\"data\");\n	data_path\n}\n\n\nstruct App\n{\n	gain:f32,\n\n	audio_data: Vec<AudioData>,\n	//special_keymap: VecMap<u8>, //keycode -> index\n\n	last_keys: VecDeque<u8>,\n	keyboard_monitor: Option< event_tap::KeyboardMonitor>, //defered\n	notification_delegate: id,\n	msg_port: CFMessagePortRef\n}\n\nimpl App\n{\n	pub fn new() -> App\n	{\n		unsafe\n		{\n			let noti_center_del:id = UserNotificationCenterDelegate::new(nil).autorelease();\n			let center:id = msg_send![class(\"NSUserNotificationCenter\"), defaultUserNotificationCenter];\n			let center:id = msg_send![center, setDelegate: noti_center_del];\n\n			let msg_port = CFMessagePortCreateLocal(std::ptr::null_mut, )\n\n			let mut app = App{gain:0f32, audio_data: Vec::new(), last_keys: VecDeque::new(), keyboard_monitor:None, notification_delegate: noti_center_del};\n			app\n		}\n	}\n\n	pub fn run(&mut self)\n	{\n		let mut tap;\n\n		let ptr_to_self: *mut c_void = unsafe{std::mem::transmute(self)};\n\n		unsafe\n		{\n			let mut tap_result = event_tap::KeyboardMonitor::new(App::handle_keyboard_event, ptr_to_self);\n			match tap_result\n			{\n				Ok(t) => tap = t,\n				Err(msg) => panic!(\"error: KeyboardMonitor::new: {}\", msg)\n			}\n\n			let self_:&mut App = std::mem::transmute(ptr_to_self);\n			self_.keyboard_monitor = Some(tap);\n		}\n\n		\n		unsafe\n		{\n			CFRunLoopRun();\n		}\n	}\n\n	pub fn stop(&mut self)\n	{\n		unsafe\n		{\n			CFRunLoopStop(CFRunLoopGetCurrent());\n		}\n	}\n\n	pub fn load_audio(&mut self, dir: &str, files: &[&str])\n	{\n		self.audio_data.clear();\n\n		let mut path = dir.to_string();\n		path.push_str(\"/\");\n		let base_path_len = path.chars().count();\n\n		for f in files.iter()\n		{\n			path.push_str(f);\n			println!(\"loading audio:{}\", path);\n			let audio = AudioData::from_file(&path);\n\n			if audio.source == 0 as ALuint\n			{\n				panic!(\"failed to load audio file:{}\", f);\n			}\n\n			path.truncate(base_path_len);\n\n			self.audio_data.push(audio);\n		}\n	}\n\n	extern fn handle_keyboard_event(proxy: CGEventTapProxy, etype: CGEventType, event: CGEventRef, refcon: *mut c_void) -> CGEventRef\n	{\n		let keycode = unsafe{CGEventGetIntegerValueField(event, CGEventField::kCGKeyboardEventKeycode)} as u16;\n\n		assert!(refcon != 0 as *mut c_void);\n\n		//todo: temp\n		let app: &mut App = unsafe{ std::mem::transmute(refcon)};\n		app.handle_keydown(keycode as u8);\n		//app.audios[(keycode % 8) as usize].play();\n		//play_keycode_audio(keycode);\n\n		event\n	}\n\n	fn handle_keydown(&mut self, keycode: u8)\n	{	\n		self.last_keys.push_back(keycode);\n		if self.last_keys.len() > 6 \n		{\n			self.last_keys.pop_front();\n		}\n\n		for i in self.last_keys.iter()\n		{\n			print!(\"{} \", i);\n		}\n\n		//todo: temp\n		if self.last_keys.iter().zip(QUIT_KEY_SEQ.iter()).filter(|&(a,b)| a == b).count() == QUIT_KEY_SEQ.len()\n		{\n			println!(\"Quit!\");\n			self.show_notification(\"Tickeys\", \"已退出\");\n			self.stop();\n		}\n\n		println!(\"key:{}\", keycode);\n\n\n\n		static mut last_time: u64 = 0;\n		static mut last_key: i16 = -1;\n		\n		let index = match keycode\n		{\n			36 => 8, //return\n			/*51 => 9, //back\n			49 => 8, //space\n			125 => 6, //down\n			126 => 7, //up*/\n			_ => (keycode % NON_UNIQ_AUDIO_COUNT) as usize\n		};\n\n		unsafe\n		{	\n			let now = time::precise_time_ns() / 1000 / 1000;\n\n			let delta = now - last_time ;\n			println!(\"interval:{}\", delta);\n			if delta < 60 && last_key == (keycode as i16)\n			{\n				last_time = now;\n				return;\n			}\n			last_key = keycode as i16;\n			last_time = now;\n		}\n\n		self.audio_data[index].play();\n	}\n\n	fn show_notification(&mut self, title: &str, msg: &str)\n	{\n		unsafe\n		{\n			let note:id = NSUserNotification::new(nil).autorelease();\n			note.setTitle_(NSString::alloc(nil).init_str(title));\n			note.setInformativeText_(NSString::alloc(nil).init_str(msg));\n			\n			let center:id = msg_send![class(\"NSUserNotificationCenter\"), defaultUserNotificationCenter];\n\n			msg_send![center, deliverNotification: note]\n		}\n	}\n}\n\n\n\nstruct AudioData\n{\n	buffer: ALuint,\n	source: ALuint,\n    state: ALuint\n}\n\nimpl AudioData\n{\n	//todo: how to handle error?\n	pub fn from_file(file: &str) -> AudioData\n	{\n		let file_ptr = std::ffi::CString::new(file).unwrap().as_ptr();\n		let mut audio = AudioData{buffer:0, source:0, state:0};\n		\n		unsafe\n		{\n			audio.buffer = alutCreateBufferFromFile(file_ptr);\n			\n			// Create sound source (use buffer to fill source)\n    		alGenSources(1, &mut audio.source);\n    		alSourcei(audio.source, AL_BUFFER, audio.buffer as ALint);\n\n    		if audio.buffer == 0\n    		{\n    			panic!(\"failed to load file: {}\", file);\n    		}\n		}\n\n		audio\n	}\n\n	pub fn play(self: &mut AudioData)\n	{\n		unsafe\n		{\n			alSourcePlay(self.source);\n		}\n	}\n\n	pub fn set_pitch(self: &mut AudioData, value: f32)\n	{\n    	unsafe{alSourcef(self.source, AL_PITCH, value);}\n	}\n\n	pub fn set_gain(self: &mut AudioData, value: f32)\n	{\n		unsafe{alSourcef(self.source, AL_GAIN, value);}\n	}\n}\n\nimpl Drop for AudioData\n{\n	fn drop(&mut self)\n	{\n		unsafe\n		{\n			alDeleteSources(1, &self.source);\n    		alDeleteBuffers(1, &self.buffer);\n		}\n		\n	}\n}\n\npub trait NSUserNotification\n{\n	unsafe fn new(_: Self) -> id\n	{\n		msg_send![class(\"NSUserNotification\"), new]\n	}\n\n	unsafe fn setTitle_(self, title: id);\n	unsafe fn setInformativeText_(self, txt: id);\n}\n\nimpl NSUserNotification for id\n{\n	unsafe fn setTitle_(self, title: id)\n	{\n		msg_send![self, setTitle: title]\n	}\n\n	unsafe fn setInformativeText_(self, txt: id)\n	{\n		msg_send![self, setInformativeText: txt]\n	}\n}\n\n\npub trait UserNotificationCenterDelegate //: <NSUserNotificationCenerDelegate>\n{\n	fn new(_: Self) -> id\n	{\n		static REGISTER_APPDELEGATE: Once = ONCE_INIT;\n		REGISTER_APPDELEGATE.call_once(||\n		{\n			let nsobjcet = objc::runtime::Class::get(\"NSObject\").unwrap();\n			let mut decl = objc::declare::ClassDecl::new(nsobjcet, \"UserNotificationCenterDelegate\").unwrap();\n\n			unsafe\n			{\n				let delivered_fn: extern fn(&mut Object, Sel, id, id) = Self::userNotificationCenterDidDeliverNotification;\n				decl.add_method(sel!(userNotificationCenter:didDeliverNotification:), delivered_fn);\n\n				let activated_fn: extern fn(&mut Object, Sel, id, id) = Self::userNotificationCenterDidActivateNotification;\n				decl.add_method(sel!(userNotificationCenter:didActivateNotification:), activated_fn);\n			}\n\n			decl.register();\n		});\n\n	    let cls = Class::get(\"UserNotificationCenterDelegate\").unwrap();\n	    unsafe \n	    {\n	        msg_send![cls, new]\n    	}\n	}\n\n	extern fn userNotificationCenterDidDeliverNotification(this: &mut Object, _cmd: Sel, center: id, note: id)\n	{\n		println!(\"userNotificationCenterDidDeliverNotification\");\n	}\n	\n	extern fn userNotificationCenterDidActivateNotification(this: &mut Object, _cmd: Sel, center: id, note: id)\n	{\n		println!(\"userNotificationCenterDidActivateNotification\");\n\n		unsafe\n		{\n			let workspace: id = msg_send![class(\"NSWorkspace\"), sharedWorkspace];\n			//todo: extract\n			let url:id = msg_send![class(\"NSURL\"), URLWithString: NSString::alloc(nil).init_str(\"http://www.yingDev.com/projects/Tickeys\")];\n\n			let ok:bool = msg_send![workspace, openURL: url];\n\n			msg_send![center, removeDeliveredNotification:note]\n		}\n	}\n}\n\nimpl UserNotificationCenterDelegate for id\n{\n\n}\n\n\n\n\n\n\n\n\n",
			"file": "src/main.rs",
			"file_size": 10093,
			"file_write_time": 130749560940000000,
			"settings":
			{
				"buffer_size": 10121,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/core_foundation.rs",
			"settings":
			{
				"buffer_size": 2151,
				"line_ending": "Unix"
			}
		},
		{
			"file": "src/event_tap.rs",
			"settings":
			{
				"buffer_size": 1613,
				"line_ending": "Unix"
			}
		}
	],
	"build_system": "Packages/Rust/Cargo.sublime-build",
	"build_system_choices":
	[
		[
			[
				[
					"Packages/Rust/Cargo.sublime-build",
					""
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Run"
				],
				[
					"Packages/Rust/Cargo.sublime-build",
					"Test"
				],
				[
					"Packages/Rust/Rust.sublime-build",
					""
				],
				[
					"Packages/Rust/Rust.sublime-build",
					"Run"
				]
			],
			[
				"Packages/Rust/Cargo.sublime-build",
				"Run"
			]
		]
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 392.0,
		"last_filter": "PCI",
		"selected_items":
		[
			[
				"PCI",
				"Package Control: Install Package"
			],
			[
				"pcu",
				"Package Control: Upgrade Package"
			],
			[
				"PCD",
				"Package Control: Disable Package"
			],
			[
				"PCE",
				"Package Control: Enable Package"
			],
			[
				"PC",
				"Package Control: Discover Packages"
			],
			[
				"pci",
				"Package Control: Install Package"
			],
			[
				"Pci",
				"Package Control: Install Package"
			],
			[
				"PCR",
				"Package Control: Remove Package"
			],
			[
				"pCR",
				"Package Control: Remove Package"
			],
			[
				"pid",
				"Package Control: Disable Package"
			],
			[
				"pcd",
				"Package Control: Disable Package"
			],
			[
				"PIC",
				"Package Control: Install Package"
			],
			[
				"package control: li",
				"Package Control: Disable Package"
			],
			[
				"Install",
				"Package Control: Install Package"
			],
			[
				"PaCI",
				"Package Control: Install Package"
			],
			[
				"Package Control: Inst",
				"Package Control: Install Package"
			],
			[
				"Package Control: Ins",
				"Package Control: Install Package"
			],
			[
				"package Control: Install Package",
				"Package Control: Install Package"
			],
			[
				"packa",
				"Preferences: Browse Packages"
			]
		],
		"width": 467.0
	},
	"console":
	{
		"height": 152.0,
		"history":
		[
			"import urllib.request,os,hashlib; h = 'eb2297e1a458f27d836c04bb0cbaf282' + 'd0e7a3098092775ccb37ca9d6b2e4b7d'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by) ",
			"exit",
			"ls"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/Users/Ying/Desktop/Tickeys",
		"/Users/Ying/Desktop/Tickeys/SharedSupport",
		"/Users/Ying/Desktop/Tickeys/src"
	],
	"file_history":
	[
		"/Volumes/C/Users/me665/Desktop/GameOverviewList/2/Json/BaccaratDataTable.json",
		"/Volumes/C/Users/me665/Desktop/GameOverviewList/2/2.xml.ui",
		"/Users/Ying/Desktop/Tickeys/src/core_foundation.rs",
		"/Users/Ying/Desktop/Tickeys/src/core_graphics.rs",
		"/Users/Ying/Desktop/Tickeys/src/event_tap.rs",
		"/Users/Ying/Desktop/Tickeys/data/app_config.toml",
		"/Users/Ying/Desktop/Tickeys/data/user_options.default.toml",
		"/Users/Ying/Desktop/Tickeys/src/main.rs",
		"/Users/Ying/Desktop/Tickeys/Cargo.toml",
		"/Users/Ying/Desktop/hackintosh/config(1).plist",
		"/Volumes/C/Users/me665/Desktop/新建文件夹/DemoHead_UI/Export/DemoHead_UI/DemoHead_UI.csb",
		"/Users/Ying/Downloads/config.plist",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/Design/Other/AG_setup/AndroidManifest.xml",
		"/Users/Ying/Downloads/VideoChannel(1).xml",
		"/Users/Ying/Desktop/Tickeys/src/<objc macros>",
		"/Users/Ying/Desktop/Tickeys/Tickeys.app/Contents/Info.plist",
		"/Users/Ying/Desktop/Tickeys/src/<std macros>",
		"/Users/Ying/Desktop/Tickeys/src/alut.rs",
		"/Users/Ying/Desktop/Tickeys/LICENSE",
		"/Users/Ying/Desktop/Tickeys/src/lib.rs",
		"/Users/Ying/Desktop/rusthello/Cargo.toml",
		"/Users/Ying/Desktop/rusthello/src/main.rs",
		"/Users/Ying/.cargo/git/checkouts/glib-27833b4b6d67ca46/master/glib-sys/src/lib.rs",
		"/Volumes/C/Users/ying/Desktop/boltsdk_2008/samples/HelloBolt/XAR/HelloBolt7/layout/Button.lua",
		"/Volumes/C/Users/ying/Desktop/boltsdk_2008/samples/HelloBolt/XAR/HelloBolt7/onload.lua",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/User/Terminal.sublime-settings",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/Terminal/Terminal.sublime-settings",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/User/Preferences.sublime-settings",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/User/RustAutoComplete.sublime-settings",
		"/Users/Ying/Desktop/rusthello/src/lib.rs",
		"/Users/Ying/.cargo/registry/src/github.com-1ecc6299db9ec823/rustc-serialize-0.3.0/src/serialize.rs",
		"/Users/Ying/Desktop/MobileGame/assets/common.zh-CN.locale",
		"/Users/Ying/Desktop/MobileGame/assets/common.en-US.locale",
		"/Developer/rust-lang/rust/src/libcore/cell.rs",
		"/Developer/rust-lang/rust/src/liballoc/boxed.rs",
		"/Users/Ying/Desktop/WorkSpace/android-ffmpeg-with-rtmp/src/ffmpeg/config.h",
		"/Users/Ying/Desktop/WorkSpace/android-ffmpeg-with-rtmp/build.sh",
		"/Users/Ying/Desktop/WorkSpace/android-ffmpeg-with-rtmp/_build_librtmp.sh",
		"/Users/Ying/Desktop/WorkSpace/android-ffmpeg-with-rtmp/patches/ffmpeg-configure.patch",
		"/Users/Ying/Desktop/WorkSpace/android-ffmpeg-with-rtmp/_build_ffmpeg.sh",
		"/Users/Ying/Desktop/WorkSpace/android-ffmpeg-with-rtmp/build/build.log",
		"/Users/Ying/Desktop/WorkSpace/android-ffmpeg-with-rtmp/src/ffmpeg/config.mak",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/locale/baccarat.en-US.locale",
		"/Users/Ying/Desktop/MobileGame/AndroidManifest.xml",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/proj.android/build_native.py",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/3rd/static/ffmpeg2.4.1/Android.mk",
		"/Users/Ying/Desktop/MobileGame iOS.plist",
		"/Users/Ying/Desktop/untitled.plist",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/proj.android/jni/Android.mk",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/Assets/LOGIN_UI_1/Json/LOGIN.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/Assets/LOGIN_UI_1/LOGIN_UI_1.xml.ui",
		"/Users/Ying/Desktop/rust-quicklook/rust-quicklook/highlight/styles/github.css",
		"/Users/Ying/Desktop/rust-quicklook/rust-quicklook/highlight/styles/default.css",
		"/Users/Ying/Desktop/rust-quicklook/rust-quicklook/highlight/highlight.pack.js",
		"/Library/QuickLook/QLMarkdown.qlgenerator/styles.css",
		"/Library/QuickLook/QLMarkdown.qlgenerator/blocktags",
		"/Library/QuickLook/rust-quicklook.qlgenerator/Contents/Info.plist",
		"/Users/Ying/Desktop/test.rs",
		"/Developer/rust-lang/rust/src/libcollections/vec.rs",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/User/SublimeLinter.sublime-settings",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/User/Default (OSX).sublime-keymap",
		"/Developer/rust-lang/rust/src/libcore/result.rs",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/Color Highlighter/ColorHighlighter.sublime-settings",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/User/ColorHighlighter.sublime-settings",
		"/Users/Ying/Desktop/rusthello/src/tmp1sgi9n",
		"/Users/Ying/Desktop/racer/src/racer/ast.rs",
		"/Users/Ying/Desktop/idea-rust/Makefile",
		"/Users/Ying/Desktop/rusthello/src/app.rs",
		"/Users/Ying/Desktop/rusthello/src/rusthello/lib.rs",
		"/Users/Ying/Library/Application Support/Sublime Text 3/Packages/Default/Preferences.sublime-settings",
		"/Users/Ying/Desktop/rusthello/build.sublime-build",
		"/Volumes/C/Users/Ying/AppData/Local/YingDev.com/WGestures/1.4.1.1/gestures.json",
		"/Users/Ying/Projects/SerTest/dfsdfs/gtk-gui/gui.stetic",
		"/Users/Ying/Desktop/SafeNativeMethods.cs",
		"/Users/Ying/Desktop/Screen.cs",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/SAIBAO.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/Assets/MultipleUI/Resources/locale/UILobby.zh-TW.locale",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/Assets/MultipleUI/Resources/locale/UILobby.zh-CN.locale",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/BaccaratUI.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/GameOverviewTemplate.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/common.zh-TW.locale",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/locale/roulette.zh-CN.locale",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/locale/roulette.en-US.locale",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/locale/roulette.zh-TW.locale",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/locale/baccarat.zh-TW.locale",
		"/Volumes/C 1/Users/me665/Desktop/MobileGameSolution0/MobileGame/proj.win32/mobileGame2.vcxproj",
		"/Volumes/C 1/Users/me665/Desktop/MobileGameSolution0/MobileGame/proj.win32/mobileGame2.vcxproj.filters",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/SmallVideoChannel.xml",
		"/Users/Ying/Desktop/服务器核心概要设计(13).doc",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/USERINFO_T.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/USERINFO.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/SERVICELIST_T.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/SERVICELIST_E.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/SERVICELIST.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/Assets/Baccarat_Ui/Json/Baccarat_TableList_Ui.json",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/Assets/Baccarat_Ui/Ui1.xml.ui",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Resources/UI/LOGIN.json",
		"/Users/Ying/Downloads/AG_setup/res/values-zh-rTW/strings.xml",
		"/Users/Ying/Downloads/AG_setup/AndroidManifest.xml",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/Design/Other/AG_setup/resources.arsc",
		"/Volumes/C/Users/me665/Desktop/MobileGameSolution0/说明.md",
		"/Users/Ying/Desktop/SmallVideoChannel.xml",
		"/Users/Ying/Desktop/WorkSpace/ActionScript/games/ClientNewLebo/scnetlib/src/cmd/CMD_SC_RouletteRoad.as",
		"/Users/Ying/Desktop/WorkSpace/ActionScript/games/ClientNewLebo/scnetlib/src/cmd/CMD_SC_BingoRoad.as",
		"/Users/Ying/Desktop/temp/src/main.rs",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Classes/app/controller/gameController/SicboGameController.cpp",
		"/Users/Ying/Desktop/temp/hello-rust.sublime-project",
		"/Users/Ying/Desktop/temp/main.rs",
		"/Users/Ying/Desktop/temp/<std macros>",
		"/Users/Ying/Library/Application Support/Sublime Text 2/Packages/User/Preferences.sublime-settings",
		"/Users/Ying/Library/Application Support/Sublime Text 2/Packages/User/Rust.sublime-settings",
		"/Users/Ying/Library/Application Support/Sublime Text 2/Packages/User/Distraction Free.sublime-settings",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/说明.md",
		"/Users/Ying/Library/Application Support/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/Users/Ying/Library/Application Support/Sublime Text 2/Packages/Default/Default (OSX).sublime-keymap",
		"/Users/Ying/rust.nanorc",
		"/Users/Ying/Downloads/Huagong_war_exploded/META-INF/context.xml",
		"/Users/Ying/Downloads/Huagong_war_exploded/WEB-INF/web.xml",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/Classes/view/roadmap/roulette/RoadRouB.cpp",
		"/Applications/goagent-goagent-2a5ba69/local/proxy.ini",
		"/Users/Ying/Library/Mobile Documents/com~apple~CloudDocs/rvo/keyValue.txf",
		"/Applications/goagent-goagent-2a5ba69/local/goagent-osx.command",
		"/Users/Ying/Downloads/CMD_Opcodes(1).as",
		"/Users/Ying/Desktop/WorkSpace/ActionScript/games/ClientNewLebo/scnetlib/src/cmd/bac/CMD_SC_GamePayOut.as",
		"/Users/Ying/Desktop/WorkSpace/ActionScript/games/ClientNewLebo/scnetlib/src/cmd/drag/CMD_SC_DragonTigerHistory.as",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/3rd/src/ffmpeg_android/build_android.sh",
		"/Users/Ying/Documents/Projects/Beihe/MobileGameSolution/MobileGame/3rd/src/ffmpeg_android/Android.mk"
	],
	"find":
	{
		"height": 23.0
	},
	"find_in_files":
	{
		"height": 93.0,
		"where_history":
		[
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"CFTimeInterval ",
			"ApAppDelegatep",
			"Id",
			"id",
			"last_time",
			"aiff",
			"index = ",
			"mp3",
			"map",
			"handleKeyboardEvent",
			"CGEventTapLocation",
			"test",
			"SYSROOT",
			"i32",
			"run",
			"Box::new",
			"}\n",
			"line",
			"indexOf",
			"indexOfO",
			"usr",
			"path",
			"lotus",
			"GameRule",
			"bg.jpg",
			"pause_screen.jpg",
			"bg.jpg",
			"chip_bar",
			"wood_chip_bar_rou",
			"\n",
			"Run",
			"index",
			"sendAddGlod",
			"index",
			"connectHandler",
			"m_hSocket",
			"Mac",
			"Adapt",
			"sizePercent",
			"200",
			"producttype",
			"Name",
			"enterGameScene",
			"select",
			"sendBuf",
			"debug",
			"iSize",
			"SendBuffer",
			"EncryptBuffer",
			"OnSocketSubScore",
			"m_IMain",
			"OnSocketSubUserCome",
			"onsocketmainuser",
			"init",
			",*",
			",",
			"pcbDataBuffer",
			"Encrypt",
			"socketDataHandler",
			"socketDataHandler1",
			"EncryptBuffer",
			"mac",
			"Mac",
			"pb",
			"nobuffer",
			"delay",
			"av_dlog",
			"delay",
			"VIDEO_PICTURE_QUEUE_SIZE",
			"buffer",
			"printf",
			"SLIBNAME",
			"avcodec",
			",",
			"pkg",
			"\\\"",
			"XXX",
			"\n",
			" ",
			"\n",
			" ",
			"XXOO",
			" ",
			"WTF",
			"debug",
			"menu",
			"    border: 1px solid #EFEFEF;",
			"wdrfgt123",
			"LS980ZV7",
			"F320",
			"LG",
			"check",
			"max1462x_button_pressed",
			"max1462x_ear_3button_type_data",
			"VUP_MIN",
			"acc_read_value",
			"pr_debug",
			"PERMISS_REANGE_MAX",
			"HOOK_MIN",
			"max1462x_ear_3button_type_data",
			"/system/framework/",
			"ClassNotFoundError",
			"findAndHookMethod",
			"ResourcesManager",
			"getTopLevelResources",
			"initXbridgeZygote",
			"getParametersString",
			"hookmethod",
			"Fullscreen",
			"GlobalAccess",
			"enableGlobalAccess",
			"xs",
			"xs_select",
			"加密",
			"google",
			"http://",
			"    import socket, thread, select",
			"public static void main()\n{\n		\n}\n",
			"servlet"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "build.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 122,
						"regions":
						{
						},
						"selection":
						[
							[
								122,
								122
							]
						],
						"settings":
						{
							"auto_name": "fn main()",
							"syntax": "Packages/Rust/Rust.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "Cargo.toml",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 294,
						"regions":
						{
						},
						"selection":
						[
							[
								244,
								244
							]
						],
						"settings":
						{
							"syntax": "Packages/TOML/TOML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "src/alut.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 406,
						"regions":
						{
						},
						"selection":
						[
							[
								43,
								43
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "src/main.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 10121,
						"regions":
						{
						},
						"selection":
						[
							[
								4333,
								4333
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2458.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				}
			]
		},
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 4,
					"file": "src/core_foundation.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2151,
						"regions":
						{
						},
						"selection":
						[
							[
								892,
								892
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "src/event_tap.rs",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1613,
						"regions":
						{
						},
						"selection":
						[
							[
								753,
								782
							]
						],
						"settings":
						{
							"syntax": "Packages/Rust/Rust.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.5,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 222.0
	},
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "Tickeys.sublime-project",
	"replace":
	{
		"height": 42.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 127.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 392.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 235.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
